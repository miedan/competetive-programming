from collections import defaultdict
import sys
input = sys.stdin.readline


while True:

    n = int(input())
    if n == 0:
        break

        
    l = int(input())

        
    graph = defaultdict(list)
    color= defaultdict(int)

    for _ in range(l):
        a, b = map(int, input().split())
        graph[a].append(b)
        graph[b].append(a) 
        color[a] = -1
        color[b] = -1
  
    
    def dfs(node):
        c = True
        for neigh in graph[node]:

            if color[neigh] == -1:
                color[neigh] =  1 - color[node] 
               
                c = c and dfs(neigh)
            

                    
                
            elif color[neigh] == color[node]:

                return False
        return c



   
    flag = True 
    for i in graph:
        if color[i] == -1:
            color[i] = 0
            if not dfs(i):
                flag = False
                break
        

    if flag:
        print("BICOLOURABLE.")
    else:
        print("NOT BICOLOURABLE.")
